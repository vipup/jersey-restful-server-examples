<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.blky.helloworld</groupId>
	<artifactId>jersey-restful-client-example</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>
	<repositories>
		<repository>
			<id>maven2-repository.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<properties>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>z.yyyy.MM.dd.HH.mm.ss</maven.build.timestamp.format>
		<!-- Tomcat deploy TIP: if you wish - it is sill possible to redefine it 
			over commadline: -DtheBN4tomcat=12356456 -->
		<theBN4tomcat>${timestamp}</theBN4tomcat> 
		<jersey.version>1.9</jersey.version>
		<jaxrs.version>2.9.8</jaxrs.version>
		<servlet-api-version>3.0.1</servlet-api-version>
	</properties>
	<dependencies>


		<!-- https://wiki.base22.com/display/btg/How+to+setup+SLF4J+and+LOGBack+in+a+web+app+-+fast -->
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!-- The org.codehaus.janino:commons-compiler:2.7.8 dependency -->
		<!-- will be automatically pulled in by Maven's transitivity rules -->
		<dependency>
		    <groupId>org.codehaus.janino</groupId>
		    <artifactId>janino</artifactId>
		    <version>2.7.8</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jaxrs.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>

			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>


	</dependencies>

	<scm>
		<connection>scm:git:https://github.com/vipup/jersey-restful-server-examples.git</connection>
		<developerConnection>scm:git:https://github.com/vipup/jersey-restful-server-examples.git</developerConnection>
		<url>https://github.com/vipup/jersey-restful-server-examples.git</url>
	</scm>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.sebastian-daschner</groupId>
				<artifactId>jaxrs-analyzer-maven-plugin</artifactId>
				<version>0.16</version>
				<executions>
					<execution>

						<goals>
							<goal>analyze-jaxrs</goal>
						</goals>
						<configuration>
							<backend>swagger</backend>
							<!-- dyna-API <resourcesDir>${project.artifactId}-${project.version}/api</resourcesDir> -->
							<deployedDomain>localhost:8080/jersey-restful-client-example/rest</deployedDomain>

						</configuration>
					</execution>
				</executions>
				<dependencies>
					<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-core -->
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-core</artifactId>
						<version>3.3.9</version>
					</dependency>


					<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-plugin-api</artifactId>
						<version>3.3.9</version>
					</dependency>


					<!-- https://mvnrepository.com/artifact/com.sebastian-daschner/jaxrs-analyzer -->
					<dependency>
						<groupId>com.sebastian-daschner</groupId>
						<artifactId>jaxrs-analyzer</artifactId>
						<version>0.16</version>
					</dependency>


					<!-- https://mvnrepository.com/artifact/org.eclipse.aether/aether-api -->
					<dependency>
						<groupId>org.eclipse.aether</groupId>
						<artifactId>aether-api</artifactId>
						<version>1.0.2.v20150114</version>
					</dependency>

					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.7.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-launcher</artifactId>
						<version>1.7.1</version>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>
					<shortRevisionLength>8</shortRevisionLength>
					<!--make it available for jar/war classpath resource -->
					<addOutputDirectoryToResources>true</addOutputDirectoryToResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Build-timestamp>${timestamp}</Build-timestamp>
							<Deploymen-Module-Name>${project.artifactId}-${project.version}-r${buildNumber}</Deploymen-Module-Name>
						</manifestEntries>
					</archive>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/web.xml</include>
							</includes>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>target/jaxrs-analyzer</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>index.jsp</include>
							</includes>
						</resource>
					</webResources>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<!-- https://stackoverflow.com/questions/15355708/how-to-replace-a-value-in-web-xml-with-a-maven-property -->
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>

					<failOnMissingWebXml>false</failOnMissingWebXml>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<url>${tomcat.deploy.url}</url>
					<server>${tomcat.principal}</server>
					<!-- THIS TRICK WORKS! -->
					<path>/${project.name}##${theBN4tomcat}</path>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<optimize>true</optimize>
					<debug>true</debug>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sebastian-daschner
										</groupId>
										<artifactId>
											jaxrs-analyzer-maven-plugin
										</artifactId>
										<versionRange>
											[0.16,)
										</versionRange>
										<goals>
											<goal>analyze-jaxrs</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>